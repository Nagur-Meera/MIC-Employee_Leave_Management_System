--- api/index.js.orig	2023-05-20 10:00:00.000000000 -0400
+++ api/index.js	2023-05-20 10:10:00.000000000 -0400
@@ -6,36 +6,35 @@
 const helmet = require('helmet');
 const path = require('path');
 const fs = require('fs');
+const corsMiddleware = require('../middleware/cors');
 
 // Try to load config from config.env, fall back to .env if that doesn't exist
 const configPath = fs.existsSync(path.resolve(__dirname, '../config.env')) 
   ? '../config.env' 
   : '../.env';
 require('dotenv').config({ path: configPath });
 
 const app = express();
 
 // Security middleware
 app.use(helmet());
 
-// CORS configuration
-const corsOrigins = [
-  process.env.CORS_ORIGIN || 'https://mic-employee-leave-management-syste.vercel.app',
-  'https://mic-elms.vercel.app',
-  'https://mic-elms-frontend.vercel.app',
-  'http://localhost:5173',
-  'http://127.0.0.1:5173',
-  'https://mic-elms-frontend.vercel.app',
-  'https://mic-employee-leave-management-system-n2buo4zih.vercel.app',
-  '*'  // Allow all origins during testing - remove this in production
-];
+// Apply custom CORS middleware first
+app.use(corsMiddleware);
 
+// Also apply the cors package as a backup
 app.use(cors({
-  origin: corsOrigins,
-  credentials: true
+  origin: function(origin, callback) {
+    // Allow requests with no origin
+    if (!origin) return callback(null, true);
+    callback(null, true); // Allow all origins while custom middleware handles specifics
+  },
+  credentials: true,
+  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'],
+  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Accept-Version', 'Content-Length', 'Content-MD5', 'Date', 'X-Api-Version']
 }));
 
 // Body parsing middleware
 app.use(express.json({ limit: '10mb' }));
 app.use(express.urlencoded({ extended: true, limit: '10mb' }));
